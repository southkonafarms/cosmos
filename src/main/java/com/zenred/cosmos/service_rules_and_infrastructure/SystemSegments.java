package com.zenred.cosmos.service_rules_and_infrastructure;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import com.zenred.cosmos.domain.SystemDao;
import com.zenred.cosmos.domain.UV_Instance;
import com.zenred.cosmos.vizualization.SectorsResponse;

interface RunningWindow{
		
	public void setCUrrentMinAndMax(Integer currentMinu, Integer currentMinv, Integer currentMaxu, Integer currentMaxv);
	
	public Boolean isRunningUVinWindow(Integer dimU, Integer dimV);
	
	public List<Integer> fetchCUrrentMinAndMax();
	
}

public class SystemSegments implements SystemSegmentsIF {
	
	private static Logger logger = Logger.getLogger(SystemSegments.class);
	private static SystemDao systemDao = new SystemDao();

	@Override
	public List<List<Integer>> builder() {
		
		seg0_9999_0_9999.add(0);
		seg0_9999_0_9999.add(9999);
		seg0_9999_0_9999.add(0);
		seg0_9999_0_9999.add(9999);
		masterList.add(seg0_9999_0_9999);
		seg0_9999_10000_19999.add(0);
		seg0_9999_10000_19999.add(9999);
		seg0_9999_10000_19999.add(10000);
		seg0_9999_10000_19999.add(19999);
		masterList.add(seg0_9999_10000_19999);
		seg0_9999_20000_29999.add(0);
		seg0_9999_20000_29999.add(9999);
		seg0_9999_20000_29999.add(20000);
		seg0_9999_20000_29999.add(29999);
		masterList.add(seg0_9999_20000_29999);
		seg0_9999_30000_39999.add(0);
		seg0_9999_30000_39999.add(9999);
		seg0_9999_30000_39999.add(30000);
		seg0_9999_30000_39999.add(39999);
		masterList.add(seg0_9999_30000_39999);
		seg0_9999_40000_49999.add(0);
		seg0_9999_40000_49999.add(9999);
		seg0_9999_40000_49999.add(40000);
		seg0_9999_40000_49999.add(49999);
		masterList.add(seg0_9999_40000_49999);
		seg0_9999_50000_59999.add(0);
		seg0_9999_50000_59999.add(9999);
		seg0_9999_50000_59999.add(50000);
		seg0_9999_50000_59999.add(59999);
		masterList.add(seg0_9999_50000_59999);
		seg0_9999_60000_69999.add(0);
		seg0_9999_60000_69999.add(9999);
		seg0_9999_60000_69999.add(60000);
		seg0_9999_60000_69999.add(69999);
		masterList.add(seg0_9999_60000_69999);
		seg0_9999_70000_79999.add(0);
		seg0_9999_70000_79999.add(9999);
		seg0_9999_70000_79999.add(70000);
		seg0_9999_70000_79999.add(79999);
		masterList.add(seg0_9999_70000_79999);
		seg0_9999_80000_89999.add(0);
		seg0_9999_80000_89999.add(9999);
		seg0_9999_80000_89999.add(80000);
		seg0_9999_80000_89999.add(89999);
		masterList.add(seg0_9999_80000_89999);
		seg0_9999_90000_99999.add(0);
		seg0_9999_90000_99999.add(9999);
		seg0_9999_90000_99999.add(90000);
		seg0_9999_90000_99999.add(99999);
		masterList.add(seg0_9999_90000_99999);
		
		seg10000_19999_0_9999.add(10000);
		seg10000_19999_0_9999.add(19999);
		seg10000_19999_0_9999.add(0);
		seg10000_19999_0_9999.add(9999);
		masterList.add(seg10000_19999_0_9999);
		seg10000_19999_10000_19999.add(10000);
		seg10000_19999_10000_19999.add(19999);
		seg10000_19999_10000_19999.add(10000);
		seg10000_19999_10000_19999.add(19999);
		masterList.add(seg10000_19999_10000_19999);
		seg10000_19999_20000_29999.add(10000);
		seg10000_19999_20000_29999.add(19999);
		seg10000_19999_20000_29999.add(20000);
		seg10000_19999_20000_29999.add(29999);
		masterList.add(seg10000_19999_20000_29999);
		seg10000_19999_30000_39999.add(10000);
		seg10000_19999_30000_39999.add(19999);
		seg10000_19999_30000_39999.add(30000);
		seg10000_19999_30000_39999.add(39999);
		masterList.add(seg10000_19999_30000_39999);
		seg10000_19999_40000_49999.add(10000);
		seg10000_19999_40000_49999.add(19999);
		seg10000_19999_40000_49999.add(40000);
		seg10000_19999_40000_49999.add(49999);
		masterList.add(seg10000_19999_40000_49999);
		seg10000_19999_50000_59999.add(10000);
		seg10000_19999_50000_59999.add(19999);
		seg10000_19999_50000_59999.add(50000);
		seg10000_19999_50000_59999.add(59999);
		masterList.add(seg10000_19999_50000_59999);
		seg10000_19999_60000_69999.add(10000);
		seg10000_19999_60000_69999.add(19999);
		seg10000_19999_60000_69999.add(60000);
		seg10000_19999_60000_69999.add(69999);
		masterList.add(seg10000_19999_60000_69999);
		seg10000_19999_70000_79999.add(10000);
		seg10000_19999_70000_79999.add(19999);
		seg10000_19999_70000_79999.add(70000);
		seg10000_19999_70000_79999.add(79999);
		masterList.add(seg10000_19999_70000_79999);
		seg10000_19999_80000_89999.add(10000);
		seg10000_19999_80000_89999.add(19999);
		seg10000_19999_80000_89999.add(80000);
		seg10000_19999_80000_89999.add(89999);
		masterList.add(seg10000_19999_80000_89999);
		seg10000_19999_90000_99999.add(10000);
		seg10000_19999_90000_99999.add(19999);
		seg10000_19999_90000_99999.add(90000);
		seg10000_19999_90000_99999.add(99999);
		masterList.add(seg10000_19999_90000_99999);
		
		seg20000_29999_0_9999.add(20000);
		seg20000_29999_0_9999.add(29999);
		seg20000_29999_0_9999.add(0);
		seg20000_29999_0_9999.add(9999);
		masterList.add(seg20000_29999_0_9999);
		seg20000_29999_10000_19999.add(20000);
		seg20000_29999_10000_19999.add(29999);
		seg20000_29999_10000_19999.add(10000);
		seg20000_29999_10000_19999.add(19999);
		masterList.add(seg20000_29999_10000_19999);
		seg20000_29999_20000_29999.add(20000);
		seg20000_29999_20000_29999.add(29999);
		seg20000_29999_20000_29999.add(20000);
		seg20000_29999_20000_29999.add(29999);
		masterList.add(seg20000_29999_20000_29999);
		seg20000_29999_30000_39999.add(20000);
		seg20000_29999_30000_39999.add(29999);
		seg20000_29999_30000_39999.add(30000);
		seg20000_29999_30000_39999.add(39999);
		masterList.add(seg20000_29999_30000_39999);
		seg20000_29999_40000_49999.add(20000);
		seg20000_29999_40000_49999.add(29999);
		seg20000_29999_40000_49999.add(40000);
		seg20000_29999_40000_49999.add(49999);
		masterList.add(seg20000_29999_40000_49999);
		seg20000_29999_50000_59999.add(20000);
		seg20000_29999_50000_59999.add(29999);
		seg20000_29999_50000_59999.add(50000);
		seg20000_29999_50000_59999.add(59999);
		masterList.add(seg20000_29999_50000_59999);
		seg20000_29999_60000_69999.add(20000);
		seg20000_29999_60000_69999.add(29999);
		seg20000_29999_60000_69999.add(60000);
		seg20000_29999_60000_69999.add(69999);
		masterList.add(seg20000_29999_60000_69999);
		seg20000_29999_70000_79999.add(20000);
		seg20000_29999_70000_79999.add(29999);
		seg20000_29999_70000_79999.add(70000);
		seg20000_29999_70000_79999.add(79999);
		masterList.add(seg20000_29999_70000_79999);
		seg20000_29999_80000_89999.add(20000);
		seg20000_29999_80000_89999.add(29999);
		seg20000_29999_80000_89999.add(80000);
		seg20000_29999_80000_89999.add(89999);
		masterList.add(seg20000_29999_80000_89999);
		seg20000_29999_90000_99999.add(20000);
		seg20000_29999_90000_99999.add(29999);
		seg20000_29999_90000_99999.add(90000);
		seg20000_29999_90000_99999.add(99999);
		masterList.add(seg20000_29999_90000_99999);
		
		
		seg30000_39999_0_9999.add(30000);
		seg30000_39999_0_9999.add(39999);
		seg30000_39999_0_9999.add(0);
		seg30000_39999_0_9999.add(9999);
		masterList.add(seg30000_39999_0_9999);
		seg30000_39999_10000_19999.add(30000);
		seg30000_39999_10000_19999.add(39999);
		seg30000_39999_10000_19999.add(10000);
		seg30000_39999_10000_19999.add(19999);
		masterList.add(seg30000_39999_10000_19999);
		seg30000_39999_20000_29999.add(30000);
		seg30000_39999_20000_29999.add(39999);
		seg30000_39999_20000_29999.add(20000);
		seg30000_39999_20000_29999.add(29999);
		masterList.add(seg30000_39999_20000_29999);
		seg30000_39999_30000_39999.add(30000);
		seg30000_39999_30000_39999.add(39999);
		seg30000_39999_30000_39999.add(30000);
		seg30000_39999_30000_39999.add(39999);
		masterList.add(seg30000_39999_30000_39999);
		seg30000_39999_40000_49999.add(30000);
		seg30000_39999_40000_49999.add(39999);
		seg30000_39999_40000_49999.add(40000);
		seg30000_39999_40000_49999.add(49999);
		masterList.add(seg30000_39999_40000_49999);
		seg30000_39999_50000_59999.add(30000);
		seg30000_39999_50000_59999.add(39999);
		seg30000_39999_50000_59999.add(50000);
		seg30000_39999_50000_59999.add(59999);
		masterList.add(seg30000_39999_50000_59999);
		seg30000_39999_60000_69999.add(30000);
		seg30000_39999_60000_69999.add(39999);
		seg30000_39999_60000_69999.add(60000);
		seg30000_39999_60000_69999.add(69999);
		masterList.add(seg30000_39999_60000_69999);
		seg30000_39999_70000_79999.add(30000);
		seg30000_39999_70000_79999.add(39999);
		seg30000_39999_70000_79999.add(70000);
		seg30000_39999_70000_79999.add(79999);
		masterList.add(seg30000_39999_70000_79999);
		seg30000_39999_80000_89999.add(30000);
		seg30000_39999_80000_89999.add(39999);
		seg30000_39999_80000_89999.add(80000);
		seg30000_39999_80000_89999.add(89999);
		masterList.add(seg30000_39999_80000_89999);
		seg30000_39999_90000_99999.add(30000);
		seg30000_39999_90000_99999.add(39999);
		seg30000_39999_90000_99999.add(90000);
		seg30000_39999_90000_99999.add(99999);
		masterList.add(seg30000_39999_90000_99999);

		seg40000_49999_0_9999.add(40000);
		seg40000_49999_0_9999.add(49999);
		seg40000_49999_0_9999.add(0);
		seg40000_49999_0_9999.add(9999);
		masterList.add(seg40000_49999_0_9999);
		seg40000_49999_10000_19999.add(40000);
		seg40000_49999_10000_19999.add(49999);
		seg40000_49999_10000_19999.add(10000);
		seg40000_49999_10000_19999.add(19999);
		masterList.add(seg40000_49999_10000_19999);
		seg40000_49999_20000_29999.add(40000);
		seg40000_49999_20000_29999.add(49999);
		seg40000_49999_20000_29999.add(20000);
		seg40000_49999_20000_29999.add(29999);
		masterList.add(seg40000_49999_20000_29999);
		seg40000_49999_30000_39999.add(40000);
		seg40000_49999_30000_39999.add(49999);
		seg40000_49999_30000_39999.add(30000);
		seg40000_49999_30000_39999.add(39999);
		masterList.add(seg40000_49999_30000_39999);
		seg40000_49999_40000_49999.add(40000);
		seg40000_49999_40000_49999.add(49999);
		seg40000_49999_40000_49999.add(40000);
		seg40000_49999_40000_49999.add(49999);
		masterList.add(seg40000_49999_40000_49999);
		seg40000_49999_50000_59999.add(40000);
		seg40000_49999_50000_59999.add(49999);
		seg40000_49999_50000_59999.add(50000);
		seg40000_49999_50000_59999.add(59999);
		masterList.add(seg40000_49999_50000_59999);
		seg40000_49999_60000_69999.add(40000);
		seg40000_49999_60000_69999.add(49999);
		seg40000_49999_60000_69999.add(60000);
		seg40000_49999_60000_69999.add(69999);
		masterList.add(seg40000_49999_60000_69999);
		seg40000_49999_70000_79999.add(40000);
		seg40000_49999_70000_79999.add(49999);
		seg40000_49999_70000_79999.add(70000);
		seg40000_49999_70000_79999.add(79999);
		masterList.add(seg40000_49999_70000_79999);
		seg40000_49999_80000_89999.add(40000);
		seg40000_49999_80000_89999.add(49999);
		seg40000_49999_80000_89999.add(80000);
		seg40000_49999_80000_89999.add(89999);
		masterList.add(seg40000_49999_80000_89999);
		seg40000_49999_90000_99999.add(40000);
		seg40000_49999_90000_99999.add(49999);
		seg40000_49999_90000_99999.add(90000);
		seg40000_49999_90000_99999.add(99999);
		masterList.add(seg40000_49999_90000_99999);

		seg50000_59999_0_9999.add(50000);
		seg50000_59999_0_9999.add(59999);
		seg50000_59999_0_9999.add(0);
		seg50000_59999_0_9999.add(9999);
		masterList.add(seg50000_59999_0_9999);
		seg50000_59999_10000_19999.add(50000);
		seg50000_59999_10000_19999.add(59999);
		seg50000_59999_10000_19999.add(10000);
		seg50000_59999_10000_19999.add(19999);
		masterList.add(seg50000_59999_10000_19999);
		seg50000_59999_20000_29999.add(50000);
		seg50000_59999_20000_29999.add(59999);
		seg50000_59999_20000_29999.add(20000);
		seg50000_59999_20000_29999.add(29999);
		masterList.add(seg50000_59999_20000_29999);
		seg50000_59999_30000_39999.add(50000);
		seg50000_59999_30000_39999.add(59999);
		seg50000_59999_30000_39999.add(30000);
		seg50000_59999_30000_39999.add(39999);
		masterList.add(seg50000_59999_30000_39999);
		seg50000_59999_40000_49999.add(50000);
		seg50000_59999_40000_49999.add(59999);
		seg50000_59999_40000_49999.add(40000);
		seg50000_59999_40000_49999.add(49999);
		masterList.add(seg50000_59999_40000_49999);
		seg50000_59999_50000_59999.add(50000);
		seg50000_59999_50000_59999.add(59999);
		seg50000_59999_50000_59999.add(50000);
		seg50000_59999_50000_59999.add(59999);
		masterList.add(seg50000_59999_50000_59999);
		seg50000_59999_60000_69999.add(50000);
		seg50000_59999_60000_69999.add(59999);
		seg50000_59999_60000_69999.add(60000);
		seg50000_59999_60000_69999.add(69999);
		masterList.add(seg50000_59999_60000_69999);
		seg50000_59999_70000_79999.add(50000);
		seg50000_59999_70000_79999.add(59999);
		seg50000_59999_70000_79999.add(70000);
		seg50000_59999_70000_79999.add(79999);
		masterList.add(seg50000_59999_70000_79999);
		seg50000_59999_80000_89999.add(50000);
		seg50000_59999_80000_89999.add(59999);
		seg50000_59999_80000_89999.add(80000);
		seg50000_59999_80000_89999.add(89999);
		masterList.add(seg50000_59999_80000_89999);
		seg50000_59999_90000_99999.add(50000);
		seg50000_59999_90000_99999.add(59999);
		seg50000_59999_90000_99999.add(90000);
		seg50000_59999_90000_99999.add(99999);
		masterList.add(seg50000_59999_90000_99999);

		seg60000_69999_0_9999.add(60000);
		seg60000_69999_0_9999.add(69999);
		seg60000_69999_0_9999.add(0);
		seg60000_69999_0_9999.add(9999);
		masterList.add(seg60000_69999_0_9999);
		seg60000_69999_10000_19999.add(60000);
		seg60000_69999_10000_19999.add(69999);
		seg60000_69999_10000_19999.add(10000);
		seg60000_69999_10000_19999.add(19999);
		masterList.add(seg60000_69999_10000_19999);
		seg60000_69999_20000_29999.add(60000);
		seg60000_69999_20000_29999.add(69999);
		seg60000_69999_20000_29999.add(20000);
		seg60000_69999_20000_29999.add(29999);
		masterList.add(seg60000_69999_20000_29999);
		seg60000_69999_30000_39999.add(60000);
		seg60000_69999_30000_39999.add(69999);
		seg60000_69999_30000_39999.add(30000);
		seg60000_69999_30000_39999.add(39999);
		masterList.add(seg60000_69999_30000_39999);
		seg60000_69999_40000_49999.add(60000);
		seg60000_69999_40000_49999.add(69999);
		seg60000_69999_40000_49999.add(40000);
		seg60000_69999_40000_49999.add(49999);
		masterList.add(seg60000_69999_40000_49999);
		seg60000_69999_50000_59999.add(60000);
		seg60000_69999_50000_59999.add(69999);
		seg60000_69999_50000_59999.add(50000);
		seg60000_69999_50000_59999.add(59999);
		masterList.add(seg60000_69999_50000_59999);
		seg60000_69999_60000_69999.add(60000);
		seg60000_69999_60000_69999.add(69999);
		seg60000_69999_60000_69999.add(60000);
		seg60000_69999_60000_69999.add(69999);
		masterList.add(seg60000_69999_60000_69999);
		seg60000_69999_70000_79999.add(60000);
		seg60000_69999_70000_79999.add(69999);
		seg60000_69999_70000_79999.add(70000);
		seg60000_69999_70000_79999.add(79999);
		masterList.add(seg60000_69999_70000_79999);
		seg60000_69999_80000_89999.add(60000);
		seg60000_69999_80000_89999.add(69999);
		seg60000_69999_80000_89999.add(80000);
		seg60000_69999_80000_89999.add(89999);
		masterList.add(seg60000_69999_80000_89999);
		seg60000_69999_90000_99999.add(60000);
		seg60000_69999_90000_99999.add(69999);
		seg60000_69999_90000_99999.add(90000);
		seg60000_69999_90000_99999.add(99999);
		masterList.add(seg60000_69999_90000_99999);

		seg70000_79999_0_9999.add(70000);
		seg70000_79999_0_9999.add(79999);
		seg70000_79999_0_9999.add(0);
		seg70000_79999_0_9999.add(9999);
		masterList.add(seg70000_79999_0_9999);
		seg70000_79999_10000_19999.add(70000);
		seg70000_79999_10000_19999.add(79999);
		seg70000_79999_10000_19999.add(10000);
		seg70000_79999_10000_19999.add(19999);
		masterList.add(seg70000_79999_10000_19999);
		seg70000_79999_20000_29999.add(70000);
		seg70000_79999_20000_29999.add(79999);
		seg70000_79999_20000_29999.add(20000);
		seg70000_79999_20000_29999.add(29999);
		masterList.add(seg70000_79999_20000_29999);
		seg70000_79999_30000_39999.add(70000);
		seg70000_79999_30000_39999.add(79999);
		seg70000_79999_30000_39999.add(30000);
		seg70000_79999_30000_39999.add(39999);
		masterList.add(seg70000_79999_30000_39999);
		seg70000_79999_40000_49999.add(70000);
		seg70000_79999_40000_49999.add(79999);
		seg70000_79999_40000_49999.add(40000);
		seg70000_79999_40000_49999.add(49999);
		masterList.add(seg70000_79999_40000_49999);
		seg70000_79999_50000_59999.add(70000);
		seg70000_79999_50000_59999.add(79999);
		seg70000_79999_50000_59999.add(50000);
		seg70000_79999_50000_59999.add(59999);
		masterList.add(seg70000_79999_50000_59999);
		seg70000_79999_60000_69999.add(70000);
		seg70000_79999_60000_69999.add(79999);
		seg70000_79999_60000_69999.add(60000);
		seg70000_79999_60000_69999.add(69999);
		masterList.add(seg70000_79999_60000_69999);
		seg70000_79999_70000_79999.add(70000);
		seg70000_79999_70000_79999.add(79999);
		seg70000_79999_70000_79999.add(70000);
		seg70000_79999_70000_79999.add(79999);
		masterList.add(seg70000_79999_70000_79999);
		seg70000_79999_80000_89999.add(70000);
		seg70000_79999_80000_89999.add(79999);
		seg70000_79999_80000_89999.add(80000);
		seg70000_79999_80000_89999.add(89999);
		masterList.add(seg70000_79999_80000_89999);
		seg70000_79999_90000_99999.add(70000);
		seg70000_79999_90000_99999.add(79999);
		seg70000_79999_90000_99999.add(90000);
		seg70000_79999_90000_99999.add(99999);
		masterList.add(seg70000_79999_90000_99999);

		seg80000_89999_0_9999.add(80000);
		seg80000_89999_0_9999.add(89999);
		seg80000_89999_0_9999.add(0);
		seg80000_89999_0_9999.add(9999);
		masterList.add(seg80000_89999_0_9999);
		seg80000_89999_10000_19999.add(80000);
		seg80000_89999_10000_19999.add(89999);
		seg80000_89999_10000_19999.add(10000);
		seg80000_89999_10000_19999.add(19999);
		masterList.add(seg80000_89999_10000_19999);
		seg80000_89999_20000_29999.add(80000);
		seg80000_89999_20000_29999.add(89999);
		seg80000_89999_20000_29999.add(20000);
		seg80000_89999_20000_29999.add(29999);
		masterList.add(seg80000_89999_20000_29999);
		seg80000_89999_30000_39999.add(80000);
		seg80000_89999_30000_39999.add(89999);
		seg80000_89999_30000_39999.add(30000);
		seg80000_89999_30000_39999.add(39999);
		masterList.add(seg80000_89999_30000_39999);
		seg80000_89999_40000_49999.add(80000);
		seg80000_89999_40000_49999.add(89999);
		seg80000_89999_40000_49999.add(40000);
		seg80000_89999_40000_49999.add(49999);
		masterList.add(seg80000_89999_40000_49999);
		seg80000_89999_50000_59999.add(80000);
		seg80000_89999_50000_59999.add(89999);
		seg80000_89999_50000_59999.add(50000);
		seg80000_89999_50000_59999.add(59999);
		masterList.add(seg80000_89999_50000_59999);
		seg80000_89999_60000_69999.add(80000);
		seg80000_89999_60000_69999.add(89999);
		seg80000_89999_60000_69999.add(60000);
		seg80000_89999_60000_69999.add(69999);
		masterList.add(seg80000_89999_60000_69999);
		seg80000_89999_70000_79999.add(80000);
		seg80000_89999_70000_79999.add(89999);
		seg80000_89999_70000_79999.add(70000);
		seg80000_89999_70000_79999.add(79999);
		masterList.add(seg80000_89999_70000_79999);
		seg80000_89999_80000_89999.add(80000);
		seg80000_89999_80000_89999.add(89999);
		seg80000_89999_80000_89999.add(80000);
		seg80000_89999_80000_89999.add(89999);
		masterList.add(seg80000_89999_80000_89999);
		seg80000_89999_90000_99999.add(80000);
		seg80000_89999_90000_99999.add(89999);
		seg80000_89999_90000_99999.add(90000);
		seg80000_89999_90000_99999.add(99999);
		masterList.add(seg80000_89999_90000_99999);

		seg90000_99999_0_9999.add(90000);
		seg90000_99999_0_9999.add(99999);
		seg90000_99999_0_9999.add(0);
		seg90000_99999_0_9999.add(9999);
		masterList.add(seg90000_99999_0_9999);
		seg90000_99999_10000_19999.add(90000);
		seg90000_99999_10000_19999.add(99999);
		seg90000_99999_10000_19999.add(10000);
		seg90000_99999_10000_19999.add(19999);
		masterList.add(seg90000_99999_10000_19999);
		seg90000_99999_20000_29999.add(90000);
		seg90000_99999_20000_29999.add(99999);
		seg90000_99999_20000_29999.add(20000);
		seg90000_99999_20000_29999.add(29999);
		masterList.add(seg90000_99999_20000_29999);
		seg90000_99999_30000_39999.add(90000);
		seg90000_99999_30000_39999.add(99999);
		seg90000_99999_30000_39999.add(30000);
		seg90000_99999_30000_39999.add(39999);
		masterList.add(seg90000_99999_30000_39999);
		seg90000_99999_40000_49999.add(90000);
		seg90000_99999_40000_49999.add(99999);
		seg90000_99999_40000_49999.add(40000);
		seg90000_99999_40000_49999.add(49999);
		masterList.add(seg90000_99999_40000_49999);
		seg90000_99999_50000_59999.add(90000);
		seg90000_99999_50000_59999.add(99999);
		seg90000_99999_50000_59999.add(50000);
		seg90000_99999_50000_59999.add(59999);
		masterList.add(seg90000_99999_50000_59999);
		seg90000_99999_60000_69999.add(90000);
		seg90000_99999_60000_69999.add(99999);
		seg90000_99999_60000_69999.add(60000);
		seg90000_99999_60000_69999.add(69999);
		masterList.add(seg90000_99999_60000_69999);
		seg90000_99999_70000_79999.add(90000);
		seg90000_99999_70000_79999.add(99999);
		seg90000_99999_70000_79999.add(70000);
		seg90000_99999_70000_79999.add(79999);
		masterList.add(seg90000_99999_70000_79999);
		seg90000_99999_80000_89999.add(90000);
		seg90000_99999_80000_89999.add(99999);
		seg90000_99999_80000_89999.add(80000);
		seg90000_99999_80000_89999.add(89999);
		masterList.add(seg90000_99999_80000_89999);
		seg90000_99999_90000_99999.add(90000);
		seg90000_99999_90000_99999.add(99999);
		seg90000_99999_90000_99999.add(90000);
		seg90000_99999_90000_99999.add(99999);
		masterList.add(seg90000_99999_90000_99999);

		return masterList;
		
	}
	
	public static SectorsResponse sectorResponse(){
		
		
		/**
		 * holds the 25 element matrix of the current set of UV coordinates.
		 */
		RunningWindow runningWindow = new RunningWindow(){

			Integer minu;
			Integer minv;
			Integer maxu;
			Integer maxv;
			/**
			 * set the current 25 element matrix
			 */
			@Override
			public void setCUrrentMinAndMax(Integer currentMinu, Integer currentMinv, Integer currentMaxu,
					Integer currentMaxv) {
				minu = currentMinu-2;
				minv = currentMinv-2;
				maxu = currentMaxu+2;
				maxv = currentMaxv+2;
				if(minu < 0){
					Integer bump = Math.abs(minu);
					minu += bump;  // shift quantity of bump
					minv += bump;
				}
				if(minv < 0){
					Integer bump = Math.abs(minv);
					minu += bump;  // shift quantity of bump
					minv += bump;
				}
				if(maxu > 999999){
					Integer bump = maxu - 999999;
					maxu -= bump;
					maxv -= bump;
				}
				if(maxv > 999999){
					Integer bump = maxv - 999999;
					maxu -= bump;
					maxv -= bump;
				}
			}

			/**				Integer countInWimdow = 

			 * is the current uv set in the matrix?
			 */
			@Override
			public Boolean isRunningUVinWindow(Integer dimU, Integer dimV) {
				Boolean answer = Boolean.FALSE;
				if(dimU >= minu && dimV >= minv && dimU <= maxu && dimV <= maxv){
					answer = Boolean.TRUE;
				}
				return answer;
			}

			@Override
			public List<Integer> fetchCUrrentMinAndMax() {
				List<Integer> windwow5by5 = new ArrayList<Integer>();
				windwow5by5.add(minu);
				windwow5by5.add(minv);
				windwow5by5.add(maxu);
				windwow5by5.add(maxv);
				return windwow5by5;
			}
			
		};
		
		runningWindow.setCUrrentMinAndMax(2, 2, 2, 2);  //first centre  
		Integer key = 0;
		StringBuilder keyValuePair = new StringBuilder();
		SystemSegments systemSegments = new SystemSegments();
		List<List<Integer>> masterList = systemSegments.builder();
		Integer [] positions = new Integer[4];
		for(List<Integer> deatailList: masterList){
			if(deatailList.size() == 0){
				continue;
			}
			for(Integer idex = 0; idex < deatailList.size(); idex++){
				positions[idex] = deatailList.get(idex);
			}
			List<UV_Instance> uvList = systemDao.readSystemSegment(positions[0], positions[1], positions[2], positions[3]);
			logger.info("seg"+positions[0]+"_"+positions[1]+"_"+positions[2]+"_"
			+positions[3]+":"+"uvList length:"+uvList.size());
			for(Integer idex = 0; idex < uvList.size(); idex++){
				Integer udim = uvList.get(idex).getuDimension();
				Integer vdim = uvList.get(idex).getvDimension();
				if(runningWindow.isRunningUVinWindow(udim, vdim)){
					List<Integer> preSector = runningWindow.fetchCUrrentMinAndMax();
					String sector = preSector.get(0)+":"+preSector.get(1)+":"+preSector.get(2)+":"+preSector.get(3);
					if (key.equals(0)) {
						keyValuePair.append(key).append("=").append(sector);
					} else {
						keyValuePair.append(";").append(key).append("=").append(sector);
					}
					++key;
				}
				else{
					runningWindow.setCUrrentMinAndMax(udim,vdim,udim,vdim);
				}
				
			}
		}
		SectorsResponse sectorsResponse = new SectorsResponse();
		sectorsResponse.setSectors(keyValuePair.toString());
		return sectorsResponse;
	}

}
